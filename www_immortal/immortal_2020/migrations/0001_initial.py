# Generated by Django 2.2.9 on 2020-02-21 08:00
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import immortal_2020.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Disclaimer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('body_text', tinymce.models.HTMLField()),
                ('publish', models.NullBooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Disclaimer',
                'verbose_name_plural': 'Disclaimer',
            },
        ),
        migrations.CreateModel(
            name='Group_Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('icon', models.FileField(upload_to='group_company_icon/')),
                ('publish', models.NullBooleanField(default=True)),
                ('sorting', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Group Company',
                'verbose_name_plural': 'Group Companies',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='Header_Title_Keyword_Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(choices=[('1', 'Main Page'), ('2', 'Work'), ('3', 'Trends'), ('4', 'Scope'), ('5', 'Contact')], default='1', help_text='Display This Header or Keyword On Which Page', max_length=100)),
                ('title', models.CharField(blank=True, help_text='Please type manually, Heading Title To Be Display (If Any)', max_length=250, null=True)),
                ('keyword', models.CharField(blank=True, help_text='Please type manually, Keyword In Header To Be Display (If Any)', max_length=100, null=True)),
                ('seo_keyword', models.CharField(blank=True, help_text='Please type manually, Keyword For SEO (If Any)', max_length=100, null=True)),
            ],
            options={
                'verbose_name': "Page's Title Keyword Setting",
                'verbose_name_plural': "Page's Title Keyword Setting",
                'ordering': ['page', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('address', tinymce.models.HTMLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('google_map', models.URLField(blank=True, max_length=500, null=True)),
                ('publish', models.NullBooleanField(default=True)),
                ('sorting', models.IntegerField(default=100)),
            ],
            options={
                'verbose_name': 'Office',
                'verbose_name_plural': 'Offices',
                'ordering': ['sorting', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Pdpa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('body_text', tinymce.models.HTMLField()),
                ('url', models.URLField(blank=True, help_text='If this field is filled up, the footer pdpa url will redirect instead of popup pdpa content from this page', max_length=255, null=True)),
                ('publish', models.NullBooleanField(default=True)),
            ],
            options={
                'verbose_name': 'PDPA',
                'verbose_name_plural': 'PDPA',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name Of Project', max_length=255)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('keyword', models.TextField(blank=True, max_length=500, null=True)),
                ('thumbnail', models.ImageField(help_text='Mandatory, will be shown as all project thumbnails', max_length=250, upload_to=immortal_2020.models.get_project_directory_upload_path)),
                ('publish', models.NullBooleanField(default=True)),
                ('show_on_main', models.NullBooleanField(default=False, help_text='Show On Main Page')),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Project',
                'ordering': ['sorting', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Project_Type_List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('sorting', models.IntegerField(default=100)),
                ('publish', models.NullBooleanField(default=True)),
            ],
            options={
                'verbose_name': 'List Project Types',
                'verbose_name_plural': 'List Project Types',
                'ordering': ['sorting', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Service_Scope_List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', tinymce.models.HTMLField(max_length=150)),
                ('sorting', models.IntegerField(default=100)),
                ('publish', models.NullBooleanField(default=True)),
            ],
            options={
                'verbose_name': 'List Service Scope',
                'verbose_name_plural': 'List Service Scope',
                'ordering': ['sorting', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('value', models.TextField(blank=True, max_length=1000, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='setting/')),
                ('hint', models.TextField(blank=True, max_length=255, null=True)),
                ('publish', models.NullBooleanField(default=True)),
                ('font_hex_color', models.CharField(blank=True, default='#ffffff', help_text='Font color in hex, ie: #ffffff. To be displayed for font text overlapping slideshows, only impacts page_header_keywords. Defaulted to white, with black being used for exceptions', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Social_Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='social_media_icon/')),
                ('sorting', models.IntegerField()),
                ('publish', models.NullBooleanField(default=True)),
            ],
            options={
                'verbose_name': 'List Social Media Icons',
                'verbose_name_plural': 'List Social Media Icons',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='Trend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Trend Title', max_length=255)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('keyword', models.TextField(help_text='Keyword or Sub-Title to be display on list', max_length=255)),
                ('short_description', models.TextField(help_text='Short Description to be display on list', max_length=500)),
                ('date', models.DateField()),
                ('thumbnail', models.ImageField(help_text='Mandatory, will be shown as thumbnails', upload_to=immortal_2020.models.get_trend_directory_upload_path)),
                ('thumbnail_font_hex_color', models.CharField(blank=True, help_text='Font color in hex, ie: #ffffff. To be displayed for font text overlapping slideshows, Defaulted to white.', max_length=50, null=True)),
                ('publish', models.NullBooleanField(default=True)),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Trend',
                'verbose_name_plural': 'Trend',
                'ordering': ['sorting', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Trend_Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_title', models.CharField(blank=True, max_length=255, null=True)),
                ('left_image', models.ImageField(blank=True, null=True, upload_to=immortal_2020.models.get_trend_directory_upload_path)),
                ('left_body_text', tinymce.models.HTMLField(blank=True, null=True)),
                ('right_title', models.CharField(blank=True, max_length=255, null=True)),
                ('right_image', models.ImageField(blank=True, null=True, upload_to=immortal_2020.models.get_trend_directory_upload_path)),
                ('right_body_text', tinymce.models.HTMLField(blank=True, null=True)),
                ('row_style', models.CharField(choices=[('span_full_width', 'Span Row Image Cover Full Witdh'), ('span_align_center', 'Span Row Content Align Center'), ('span_align_left', 'Span Row Content Align Left'), ('half_align_left', 'Content Align Left')], default='half_align_left', help_text='Row Content Layout Style, Only will have affect if right content empty.', max_length=100)),
                ('sorting', models.IntegerField(default=100)),
                ('trend_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='immortal_2020.Trend')),
            ],
            options={
                'verbose_name': 'Trend Row Content',
                'verbose_name_plural': 'Trend Row Content',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='Project_Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_title', models.CharField(blank=True, max_length=255, null=True)),
                ('left_image', models.ImageField(blank=True, null=True, upload_to=immortal_2020.models.get_project_directory_upload_path)),
                ('left_body_text', tinymce.models.HTMLField(blank=True, null=True)),
                ('right_title', models.CharField(blank=True, max_length=255, null=True)),
                ('right_image', models.ImageField(blank=True, null=True, upload_to=immortal_2020.models.get_project_directory_upload_path)),
                ('right_body_text', tinymce.models.HTMLField(blank=True, null=True)),
                ('row_style', models.CharField(choices=[('span_full_width', 'Span Row Image Cover Full Witdh'), ('span_align_center', 'Span Row Content Align Center'), ('span_align_left', 'Span Row Content Align Left'), ('half_align_left', 'Content Align Left')], default='span_full_width', help_text='Row Content Layout Style, Only will have affect if right content empty.', max_length=100)),
                ('sorting', models.IntegerField(default=100)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='immortal_2020.Project')),
            ],
            options={
                'verbose_name': 'Poject Row Content',
                'verbose_name_plural': 'Poject Row Content',
                'ordering': ['sorting'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.ManyToManyField(help_text="Project's Type", related_name='project_type', to='immortal_2020.Project_Type_List'),
        ),
    ]
